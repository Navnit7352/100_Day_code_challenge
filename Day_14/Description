isIdentical Function:
    This function takes in the roots of two trees, root1 and root2.
    It first checks if both root1 and root2 are null. If so, they're identical trees, so it returns true.
    If only one of the trees is null while the other isn't, they're not identical, so it returns false.
    Then it checks if the data of the current nodes in both trees (root1 and root2) are equal.
    If the data matches, it recursively checks the left subtrees and the right subtrees to ensure they are also identical.
    The function returns true only if the current nodes are equal, and both left and right subtrees are also identical.
    If any point of comparison shows inequality, it returns false.

time complexity 
    The time complexity of this code is O(N) where N is the number of nodes in the trees. 
