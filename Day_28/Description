The function getPairsCount takes three parameters: the array arr, its length n, and the target sum k.
It initializes a HashMap seen to keep track of the frequency of numbers encountered so far and a variable count to store the count of pairs.
It iterates through the array arr and for each element num:
Calculates the complement (k - num) that would complete the pair to sum up to k.
Checks if the complement exists in the seen map. If it does, it means there are elements earlier in the array that can form pairs with the current num to achieve the sum k.
Increments the count by the frequency of the complement found in the seen map.
Updates the frequency of the current num in the seen map by using seen.put(num, seen.getOrDefault(num, 0) + 1).

Time Complexity:
    The time complexity of this algorithm is O(n)
